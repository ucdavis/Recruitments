// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using CAESDO.Recruitment.Core.Domain;
namespace CAESDO.Recruitment.Test
{
    /// <summary>
    ///This is a test class for CAESDO.Recruitment.Core.Domain.Department and is intended
    ///to contain all CAESDO.Recruitment.Core.Domain.Department Unit Tests
    ///</summary>
    [TestClass()]
    public class DepartmentTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for AssociatedPosition
        ///</summary>
        [TestMethod()]
        public void AssociatedPositionTest()
        {
            Department target = new Department();

            Position val = null; // TODO: Assign to an appropriate value for the property

            target.AssociatedPosition = val;


            Assert.AreEqual(val, target.AssociatedPosition, "CAESDO.Recruitment.Core.Domain.Department.AssociatedPosition was not set correctl" +
                    "y.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

        /// <summary>
        ///A test for Department ()
        ///</summary>
        [TestMethod()]
        public void ConstructorTest()
        {
            Department target = new Department();

            // TODO: Implement code to verify target
            Assert.Inconclusive("TODO: Implement code to verify target");
        }

        /// <summary>
        ///A test for DepartmentFIS
        ///</summary>
        [TestMethod()]
        public void DepartmentFISTest()
        {
            Department target = new Department();

            string val = null; // TODO: Assign to an appropriate value for the property

            target.DepartmentFIS = val;


            Assert.AreEqual(val, target.DepartmentFIS, "CAESDO.Recruitment.Core.Domain.Department.DepartmentFIS was not set correctly.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

    }
    /// <summary>
    ///This is a test class for CAESDO.Recruitment.Core.Domain.Ethnicity and is intended
    ///to contain all CAESDO.Recruitment.Core.Domain.Ethnicity Unit Tests
    ///</summary>
    [TestClass()]
    public class EthnicityTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for Ethnicity ()
        ///</summary>
        [TestMethod()]
        public void ConstructorTest()
        {
            Ethnicity target = new Ethnicity();

            // TODO: Implement code to verify target
            Assert.Inconclusive("TODO: Implement code to verify target");
        }

        /// <summary>
        ///A test for EthnicityValue
        ///</summary>
        [TestMethod()]
        public void EthnicityValueTest()
        {
            Ethnicity target = new Ethnicity();

            string val = null; // TODO: Assign to an appropriate value for the property

            target.EthnicityValue = val;


            Assert.AreEqual(val, target.EthnicityValue, "CAESDO.Recruitment.Core.Domain.Ethnicity.EthnicityValue was not set correctly.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

    }
    /// <summary>
    ///This is a test class for CAESDO.Recruitment.Core.Domain.FileType and is intended
    ///to contain all CAESDO.Recruitment.Core.Domain.FileType Unit Tests
    ///</summary>
    [TestClass()]
    public class FileTypeTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for FileType ()
        ///</summary>
        [TestMethod()]
        public void ConstructorTest()
        {
            FileType target = new FileType();

            // TODO: Implement code to verify target
            Assert.Inconclusive("TODO: Implement code to verify target");
        }

        /// <summary>
        ///A test for FileTypeName
        ///</summary>
        [TestMethod()]
        public void FileTypeNameTest()
        {
            FileType target = new FileType();

            string val = null; // TODO: Assign to an appropriate value for the property

            target.FileTypeName = val;


            Assert.AreEqual(val, target.FileTypeName, "CAESDO.Recruitment.Core.Domain.FileType.FileTypeName was not set correctly.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

    }
    /// <summary>
    ///This is a test class for CAESDO.Recruitment.Core.Domain.Gender and is intended
    ///to contain all CAESDO.Recruitment.Core.Domain.Gender Unit Tests
    ///</summary>
    [TestClass()]
    public class GenderTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for Gender ()
        ///</summary>
        [TestMethod()]
        public void ConstructorTest()
        {
            Gender target = new Gender();

            // TODO: Implement code to verify target
            Assert.Inconclusive("TODO: Implement code to verify target");
        }

        /// <summary>
        ///A test for GenderType
        ///</summary>
        [TestMethod()]
        public void GenderTypeTest()
        {
            Gender target = new Gender();

            string val = null; // TODO: Assign to an appropriate value for the property

            target.GenderType = val;


            Assert.AreEqual(val, target.GenderType, "CAESDO.Recruitment.Core.Domain.Gender.GenderType was not set correctly.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

    }
    /// <summary>
    ///This is a test class for CAESDO.Recruitment.Core.Domain.MemberType and is intended
    ///to contain all CAESDO.Recruitment.Core.Domain.MemberType Unit Tests
    ///</summary>
    [TestClass()]
    public class MemberTypeTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for MemberType ()
        ///</summary>
        [TestMethod()]
        public void ConstructorTest()
        {
            MemberType target = new MemberType();

            // TODO: Implement code to verify target
            Assert.Inconclusive("TODO: Implement code to verify target");
        }

        /// <summary>
        ///A test for Type
        ///</summary>
        [TestMethod()]
        public void TypeTest()
        {
            MemberType target = new MemberType();

            string val = null; // TODO: Assign to an appropriate value for the property

            target.Type = val;


            Assert.AreEqual(val, target.Type, "CAESDO.Recruitment.Core.Domain.MemberType.Type was not set correctly.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

    }
    /// <summary>
    ///This is a test class for CAESDO.Recruitment.Core.Domain.RecruitmentSrc and is intended
    ///to contain all CAESDO.Recruitment.Core.Domain.RecruitmentSrc Unit Tests
    ///</summary>
    [TestClass()]
    public class RecruitmentSrcTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for RecruitmentSource
        ///</summary>
        [TestMethod()]
        public void RecruitmentSourceTest()
        {
            RecruitmentSrc target = new RecruitmentSrc();

            string val = null; // TODO: Assign to an appropriate value for the property

            target.RecruitmentSource = val;


            Assert.AreEqual(val, target.RecruitmentSource, "CAESDO.Recruitment.Core.Domain.RecruitmentSrc.RecruitmentSource was not set corre" +
                    "ctly.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

        /// <summary>
        ///A test for RecruitmentSrc ()
        ///</summary>
        [TestMethod()]
        public void ConstructorTest()
        {
            RecruitmentSrc target = new RecruitmentSrc();

            // TODO: Implement code to verify target
            Assert.Inconclusive("TODO: Implement code to verify target");
        }

    }


}
