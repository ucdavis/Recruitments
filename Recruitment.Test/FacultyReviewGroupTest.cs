// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using CAESDO.Recruitment.Core.Domain;
using System.Security.Principal;
namespace CAESDO.Recruitment.Test
{
    /// <summary>
    ///This is a test class for CAESDO.Recruitment.Core.Domain.FacultyReviewGroup and is intended
    ///to contain all CAESDO.Recruitment.Core.Domain.FacultyReviewGroup Unit Tests
    ///</summary>
    [TestClass()]
    public class FacultyReviewGroupTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for isUserInGroup (System.Security.Principal.IPrincipal)
        ///</summary>
        [TestMethod()]
        public void isUserInGroupTest()
        {
            FacultyReviewGroup target = new FacultyReviewGroup();

            IPrincipal user = null; // TODO: Initialize to an appropriate value

            bool expected = false;
            bool actual;

            actual = target.isUserInGroup(user);

            Assert.AreEqual(expected, actual, "CAESDO.Recruitment.Core.Domain.FacultyReviewGroup.isUserInGroup did not return th" +
                    "e expected value.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

        /// <summary>
        ///A test for Members
        ///</summary>
        [TestMethod()]
        public void MembersTest()
        {
            FacultyReviewGroup target = new FacultyReviewGroup();

            System.Collections.Generic.List<CAESDO.Recruitment.Core.Domain.User> val = null; // TODO: Assign to an appropriate value for the property

            target.Members = val;


            Assert.AreEqual(val, target.Members, "CAESDO.Recruitment.Core.Domain.FacultyReviewGroup.Members was not set correctly.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

        /// <summary>
        ///A test for PositionID
        ///</summary>
        [TestMethod()]
        public void PositionIDTest()
        {
            FacultyReviewGroup target = new FacultyReviewGroup();

            int val = 0; // TODO: Assign to an appropriate value for the property

            target.PositionID = val;


            Assert.AreEqual(val, target.PositionID, "CAESDO.Recruitment.Core.Domain.FacultyReviewGroup.PositionID was not set correctl" +
                    "y.");
            Assert.Inconclusive("Verify the correctness of this test method.");
        }

    }


}
